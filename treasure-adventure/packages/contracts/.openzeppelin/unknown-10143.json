{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4562c8770Dd974E618e9de8948A0AF68e121C4f2",
      "txHash": "0x4d2c66e629b15f27b8d92ab318b75eb815f8a14435ef92076a439388558064fb",
      "kind": "uups"
    },
    {
      "address": "0xFa3931fB44763fBed14a5945DdD51950cAa8907E",
      "txHash": "0x254d832f120385aed5de7a090929e3f8c2b0f37303b3307087e2ceca97661755",
      "kind": "uups"
    },
    {
      "address": "0x9C290C91DC47973d2CeA2f41B2Aa014E2f2d1EC2",
      "txHash": "0xaf96ad24d13e4deeec70feacf2242288030b6c15986fc3b946566571658f843f",
      "kind": "uups"
    },
    {
      "address": "0x429D2Ed9A031d64F7B67680cD18ecfBDAaCdEb4D",
      "txHash": "0xec8c9d5392008cf8b637d927fd2a9dbbacd0c3130a8c53abf402dfd629e8f129",
      "kind": "uups"
    },
    {
      "address": "0x1289b7D431D5b3977Bf73D214d06b8c4F8a22e59",
      "txHash": "0xaec0152354f8682cbe9bc6086a0cb51fa82d0cae9cb4ec25cf6a01cfa89cb7b8",
      "kind": "uups"
    },
    {
      "address": "0x643634E6E17fBd3380ffedFC8980dA216c81243f",
      "txHash": "0x1bf60aaef228059eeee71fc674e02112f036164952a7b6683a9b981bf958dca3",
      "kind": "uups"
    },
    {
      "address": "0x3034b980118944eB30b61300FFA4fe39943a8a11",
      "txHash": "0x060335ed84413c9e05f215d6624f15a24fe27d313eab86a163829191fbba0654",
      "kind": "uups"
    },
    {
      "address": "0x35c58552668AA032a2B69Ca7701B46c591AC2d82",
      "txHash": "0xb2b74b1f89b117f6b2cba4442c5ce689fdbe7d58e0eef54dfd225a7ea2acc1e6",
      "kind": "uups"
    },
    {
      "address": "0xFAeC206f98ba6FE2B602Ef7BE73f4Ae5e259380F",
      "txHash": "0xa23f90fc3cd06c028593704bda3b2f058449c3908b96cfe69abd0c8b0323218c",
      "kind": "uups"
    },
    {
      "address": "0x8385d423391DCd8e0244057e49b505E7aC8D110C",
      "txHash": "0x247eeac601705d8438590e51fcbc0e5e2a6fdfa65ab652926a4bdb6ad3cfbf22",
      "kind": "uups"
    },
    {
      "address": "0xBE45dF5Fa47C79087e88055ea1E5b4e868FbC38B",
      "txHash": "0x2c0d7ddd68c899773ddf83381bd8d0cef6d92615f4700400277a69ef8d94c72e",
      "kind": "uups"
    },
    {
      "address": "0x99bB864d5F7405452ec00767a4fF2b63395E273A",
      "txHash": "0xc9c42c26e4e3572acbffa6c2fc202792a96ee37f597612828b2bbef2ad3ee229",
      "kind": "uups"
    }
  ],
  "impls": {
    "4f2a788e646d0c752233511c6b7b4c61b06fa6fa4e32eaf6cec96b80c12b04dc": {
      "address": "0x297a5Ad4886A48ba8554cbfe4EBa81B3Cc1Bb560",
      "txHash": "0x4c5879531b9b22f4891befc41b14e7524c0ec7ad86f2668cd04a0a379a44ab06",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "authorizedSystems",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdventureGold",
            "src": "contracts/AdventureGold.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)505_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6e03a81191863fe7ad5a15e5eb43e28b02a8c036f4d6fa977a91139efac1ffb0": {
      "address": "0xC6b36f924B7ac1E3E37cD9d92345B48CeAf364AB",
      "txHash": "0xc407f3a0b3d2af0185c76cabfa0b55454d04c5ea3348989a554bc69b284c16f5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Equipment",
            "src": "contracts/Equipment.sol:16"
          },
          {
            "label": "authorizedSystems",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Equipment",
            "src": "contracts/Equipment.sol:31"
          },
          {
            "label": "equipmentData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(EquipmentData)11963_storage)",
            "contract": "Equipment",
            "src": "contracts/Equipment.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)1087_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)749_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(EquipmentData)11963_storage)": {
            "label": "mapping(uint256 => struct Equipment.EquipmentData)",
            "numberOfBytes": "32"
          },
          "t_struct(EquipmentData)11963_storage": {
            "label": "struct Equipment.EquipmentData",
            "members": [
              {
                "label": "equipmentType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "stars",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_uint8",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "attack",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "defense",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "agility",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "criticalRate",
                "type": "t_uint8",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "criticalDamage",
                "type": "t_uint16",
                "offset": 11,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "de4c226f8159288949fca7af3d57835970de18db4fe4c2efd110cb41a94ee237": {
      "address": "0x239d40B84c5C4BFbEcA6528f12b07F31B571576e",
      "txHash": "0x73460c516795171258f0e825acf35f5cc6cebfc0ee8be9785f9b8af51c4b7f5a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "authorizedSystems",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Item",
            "src": "contracts/Item.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)234_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a25d6a0cac72b267f028eac6ab73b4f3d71e6f88d5b0c050df476d2a10c26092": {
      "address": "0xF4f3c4a4cA30A0C79d2837c7957207c3414221E3",
      "txHash": "0x44b54e4abe7087eada773ca8c872943b26666cc0cfd10085a8d49839742439d7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "players",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Player)12506_storage)",
            "contract": "Player",
            "src": "contracts/Player.sol:29"
          },
          {
            "label": "equippedItems",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
            "contract": "Player",
            "src": "contracts/Player.sol:31"
          },
          {
            "label": "equipmentTypeToSlot",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint8,t_uint8)",
            "contract": "Player",
            "src": "contracts/Player.sol:36"
          },
          {
            "label": "playerItems",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Player",
            "src": "contracts/Player.sol:39"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Player",
            "src": "contracts/Player.sol:41"
          },
          {
            "label": "equipmentNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(Equipment)12395",
            "contract": "Player",
            "src": "contracts/Player.sol:43"
          },
          {
            "label": "goldToken",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(AdventureGold)11920",
            "contract": "Player",
            "src": "contracts/Player.sol:45"
          },
          {
            "label": "itemNFT",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(Item)12691",
            "contract": "Player",
            "src": "contracts/Player.sol:46"
          },
          {
            "label": "authorizedSystems",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Player",
            "src": "contracts/Player.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)1087_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)749_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(AdventureGold)11920": {
            "label": "contract AdventureGold",
            "numberOfBytes": "20"
          },
          "t_contract(Equipment)12395": {
            "label": "contract Equipment",
            "numberOfBytes": "20"
          },
          "t_contract(Item)12691": {
            "label": "contract Item",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Player)12506_storage)": {
            "label": "mapping(uint256 => struct GameStructs.Player)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Player)12506_storage": {
            "label": "struct GameStructs.Player",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "experience",
                "type": "t_uint32",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "health",
                "type": "t_uint16",
                "offset": 6,
                "slot": "1"
              },
              {
                "label": "maxHealth",
                "type": "t_uint16",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint16",
                "offset": 10,
                "slot": "1"
              },
              {
                "label": "defense",
                "type": "t_uint16",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "agility",
                "type": "t_uint16",
                "offset": 14,
                "slot": "1"
              },
              {
                "label": "criticalRate",
                "type": "t_uint8",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "criticalDamage",
                "type": "t_uint16",
                "offset": 17,
                "slot": "1"
              },
              {
                "label": "stamina",
                "type": "t_uint8",
                "offset": 19,
                "slot": "1"
              },
              {
                "label": "maxStamina",
                "type": "t_uint8",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "lastStaminaTime",
                "type": "t_uint32",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "currentForestLevel",
                "type": "t_uint16",
                "offset": 25,
                "slot": "1"
              },
              {
                "label": "currentForestProgress",
                "type": "t_uint16",
                "offset": 27,
                "slot": "1"
              },
              {
                "label": "lastTreasureBoxTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "job",
                "type": "t_uint8",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "goldBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6bdde7f152c445491e09bc596355ade3f3a2453308e2704754c2cdec5c085a8a": {
      "address": "0x0b73b1D3AF872c91f400f596fd0bF24d8910Fb4e",
      "txHash": "0x269c75744bdb0028c6c23172c9a7984f9567b3782f1dacdd887fad802a049972",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "goldToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AdventureGold)11920",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:21"
          },
          {
            "label": "equipmentNFT",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(Equipment)13564",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:22"
          },
          {
            "label": "playerNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Player)18114",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:23"
          },
          {
            "label": "itemNFT",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Item)14731",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:25"
          },
          {
            "label": "playerTreasureBoxes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_struct(TreasureBox)19235_storage)dyn_storage)",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:42"
          },
          {
            "label": "authorizedSystems",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:47"
          },
          {
            "label": "playerBattleLevels",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TreasureBoxSystem",
            "src": "contracts/TreasureBoxSystem.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(TreasureBox)19235_storage)dyn_storage": {
            "label": "struct TreasureBoxSystem.TreasureBox[]",
            "numberOfBytes": "32"
          },
          "t_contract(AdventureGold)11920": {
            "label": "contract AdventureGold",
            "numberOfBytes": "20"
          },
          "t_contract(Equipment)13564": {
            "label": "contract Equipment",
            "numberOfBytes": "20"
          },
          "t_contract(Item)14731": {
            "label": "contract Item",
            "numberOfBytes": "20"
          },
          "t_contract(Player)18114": {
            "label": "contract Player",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(TreasureBox)19235_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct TreasureBoxSystem.TreasureBox[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_struct(TreasureBox)19235_storage": {
            "label": "struct TreasureBoxSystem.TreasureBox",
            "members": [
              {
                "label": "level",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_uint8",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "createdTime",
                "type": "t_uint32",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e71e6345914608ecc099632cd2e201cdd9dbde9b63be55269672fec1cd34bee6": {
      "address": "0x1B0b3367B910ca9282E27B7d3693AFE87B8c3C7f",
      "txHash": "0x20592a099526ae7617e9fcc646ecd684d3846d3cdab4ac670a88962040aee5ae",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "playerNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(Player)18114",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:18"
          },
          {
            "label": "treasureBoxSystem",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(TreasureBoxSystem)20885",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:19"
          },
          {
            "label": "totalBattles",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:21"
          },
          {
            "label": "totalVictories",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:22"
          },
          {
            "label": "lastBattleTime",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:24"
          },
          {
            "label": "maxAdventureLevel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint16)",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:26"
          },
          {
            "label": "monsterKillCount",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint16,t_mapping(t_uint8,t_uint16)))",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:28"
          },
          {
            "label": "levelKillCount",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint16,t_uint16))",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:31"
          },
          {
            "label": "maxMonsterLevel",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint16,t_uint8))",
            "contract": "BattleSystemV2",
            "src": "contracts/BattleSystemV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Player)18114": {
            "label": "contract Player",
            "numberOfBytes": "20"
          },
          "t_contract(TreasureBoxSystem)20885": {
            "label": "contract TreasureBoxSystem",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_mapping(t_uint8,t_uint16))": {
            "label": "mapping(uint16 => mapping(uint8 => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint8)": {
            "label": "mapping(uint16 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint16,t_mapping(t_uint8,t_uint16)))": {
            "label": "mapping(uint256 => mapping(uint16 => mapping(uint8 => uint16)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint16,t_uint16))": {
            "label": "mapping(uint256 => mapping(uint16 => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint16,t_uint8))": {
            "label": "mapping(uint256 => mapping(uint16 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint16)": {
            "label": "mapping(uint8 => uint16)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
